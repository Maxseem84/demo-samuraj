{"version":3,"file":"static/js/851.b7b904ab.chunk.js","mappings":"6LAaA,EATmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAIJ,EAAMK,UAAU,SAAQC,SAClCP,EAAMQ,MAGb,ECJA,EAJgB,SAACR,GACf,OAAOG,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAASC,SAAEP,EAAMS,SACzC,E,uCCAMC,GAAeC,EAAAA,EAAAA,GAAU,KAuB/B,GAJ4BC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,kBADoBD,EAjBL,SAACZ,GACtB,OACEc,EAAAA,EAAAA,MAAA,QAAMC,SAAUf,EAAMgB,aAAaT,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAChBX,KAAK,iBACLY,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUZ,QAGzBP,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,oBAIhB,ICQA,EAxBgB,SAACP,GAEf,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QAAQC,KAAI,SAACC,GAAC,OACpDxB,EAAAA,EAAAA,KAACyB,EAAU,CAAYpB,KAAMmB,EAAEnB,KAAMN,GAAIyB,EAAEzB,IAA1ByB,EAAEzB,GAA8B,IAG/C2B,EAAmB7B,EAAMwB,YAAYM,SAASJ,KAAI,SAACK,GAAC,OACtD5B,EAAAA,EAAAA,KAAC6B,EAAO,CAAYvB,QAASsB,EAAEtB,SAAjBsB,EAAE7B,GAA0B,IAQ5C,OACEY,EAAAA,EAAAA,MAAA,OAAKR,UAAU,UAASC,SAAA,EACtBJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBC,SAAEgB,KACjCpB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUC,SAAEsB,KAC3B1B,EAAAA,EAAAA,KAAC8B,EAAc,CAAClB,SATA,SAACmB,GACnB,IAAIC,EAAiBD,EAAOC,eAC5BnC,EAAMoC,YAAYD,EACpB,MASF,E,kDCxBIE,EAAkB,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACpB,EAWD,EATyB,SAACE,GAMxB,OADqCC,EAAAA,EAAAA,IAAQL,EAARK,EAJT,SAAC1C,GAC3B,OAAKA,EAAMuC,QACJpC,EAAAA,EAAAA,KAACsC,GAASE,EAAAA,EAAAA,GAAA,GAAK3C,KADIG,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CAACvC,GAAG,UAEzC,GAGF,ECDA,GAAewC,EAAAA,EAAAA,KACbH,EAAAA,EAAAA,KAPoB,SAACJ,GACrB,MAAO,CACLd,YAAac,EAAMd,YAEvB,GAG2B,CACvBY,YAAAA,EAAAA,IAEFU,EAJF,CAKEC,E","sources":["components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport './DialogItem.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <NavLink to={path} className=\"dialog\">\r\n      {props.name}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className=\"message\">{props.message}</div>;\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLength} from \"./../../../utils/validators/validators\";\r\nimport {Textarea} from \"./../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} \r\n          name=\"newMessageText\"\r\n          placeholder=\"Enter your message\" \r\n          validate={[required, maxLength100]} \r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n  form: 'addMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default AddMessageReduxForm;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport \"./Dialogs.css\";\r\n\r\nconst Dialogs = (props) => {\r\n  \r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    let newMessageText = values.newMessageText;\r\n    props.sendMessage(newMessageText);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__items\">{dialogsElements}</div>\r\n      <div className=\"messages\">{messagesElements}</div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  let AuthRedirectComponent = (props) => {\r\n    if (!props.isAuth) return <Navigate to='/login' />\r\n    return <Component {...props} />\r\n  }    \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(AuthRedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","import Dialogs from \"./Dialogs\";\r\nimport {\r\n  sendMessage\r\n} from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","_jsx","NavLink","to","className","children","name","message","maxLength100","maxLength","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","AddMessageForm","values","newMessageText","sendMessage","mapStateToProps","state","isAuth","auth","Component","connect","_objectSpread","Navigate","compose","withAuthRedirect","Dialogs"],"sourceRoot":""}